{"version":3,"sources":["index.js"],"names":["express","require","app","bodyParser","port","process","env","PORT","router","Router","path","pg","bcrypt","use","join","__dirname","set","current_username","current_realtorID","addressID","realtor","json","urlencoded","extended","Pool","connectionParams","DATABASE_URL","connectionString","ssl","rejectUnauthorized","host","user","password","database","console","log","pool","Client","connect","err","get","req","res","next","render","title","query","property_results","properties","rows","post","body","action","addAddress","street","city","state","zip","result","length","addressid","insertProperty","propertytype","price","size","num_bedroom","num_bathroom","redirect","updateAddress","send","updateProperty","username","firstName","lastName","phoneno","email","hash","hp","realtorID","agency","compareSync","realtor_results","name","customer_results","customer","listen"],"mappings":"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","sourcesContent":["const express = require('express')\r\nconst app = express()\r\nconst bodyParser = require('body-parser');\r\nconst port = process.env.PORT || 3000\r\nconst router = express.Router();\r\nconst path = require('path') \r\nconst pg = require('pg')\r\nconst bcrypt = require('bcrypt')\r\n\r\n//Set location for accessing files\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n//Set the view engine for the express app  \r\napp.set(\"view engine\", \"pug\")\r\nvar current_username = \"\";\r\nvar current_realtorID = 2;\r\nvar addressID \r\nvar realtor = true;\r\n\r\n//for parsing application/json\r\napp.use(bodyParser.json());\r\napp.use(express.json())\r\n\r\n//for parsing application/xwww-\r\napp.use(bodyParser.urlencoded({ extended:true }));\r\n//form-urlencoded\r\n\r\n//Database\r\nconst Pool = require('pg').Pool\r\n\r\nvar connectionParams =  null;\r\nif (process.env.DATABASE_URL != null){\r\n    connectionParams = {\r\n\t\tconnectionString: process.env.DATABASE_URL,\r\n\t\tssl: { rejectUnauthorized: false }\r\n    } \r\n}\r\n\r\nelse{\r\n    connectionParams = {\r\n\t\thost: 'willowrealestate.postgres.database.azure.com',\r\n\t\tuser: 'team5',\r\n\t   \tpassword: 'Willow5!',\r\n\t   \tdatabase: 'postgres',\r\n\t \tport: 5432 ,\r\n\t \tssl: true\r\n\t}\r\n}\r\n\r\nconsole.log(connectionParams)\r\nconst pool = new pg.Client(connectionParams)\r\n\r\npool.connect(err => {\r\n    if (err) throw err; \r\n});\r\n \r\nrouter.get('/', function(req, res, next) {\r\n  res.render('index', { title: 'Willow' });\r\n});\r\n\t\r\n \r\n\r\nrouter.get('/insert', (req,res) => {  \r\n\t \r\n\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID` , (err,property_results) => {\r\n            console.log(err, property_results)\r\n          res.render('insert', {  \r\n\t\t      properties: property_results.rows\r\n\t\t\t}); \r\n\t\t\t\r\n\t\r\n\t});\r\n\t \r\n\t\r\n\t\r\n\t\r\n})\r\n\r\n\r\n\r\n\r\nrouter.post('/insert', (req, res) => {  \r\n\tif(req.body.action && req.body.action == 'add'){\r\n\t\tvar addAddress = `INSERT INTO address (street, city, state, zip) VALUES ( '${req.body.street}', '${req.body.city}', '${req.body.state}', '${req.body.zip}' ) ON conflict do nothing RETURNING addressID ` \r\n\t\t\r\n\t\tpool.query(addAddress, (err,result) => {\r\n\t\t\t if(result.rows.length > 0) {\r\n\t\t\t\taddressID = result.rows[0].addressid \r\n\t\t\t\tconsole.log(err,result)\r\n\t\t\t\tvar insertProperty = `INSERT INTO property (propertyType, price, size, num_bedroom, num_bathroom,realtorID, addressID) VALUES ('${req.body.propertytype}', '${req.body.price}','${req.body.size}','${req.body.num_bedroom}','${req.body.num_bathroom}','${current_realtorID}', '${addressID}')`\r\n\t\t\t\r\n\t\t\t\t\tpool.query(insertProperty, (err, result) => {\r\n\t\t\t\t\tconsole.log(err, result) \r\n\t\t\t\t\tres.redirect('/insert')\r\n\t\t\r\n\t\t\t\t\t}) \r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t \r\n\t\t} \r\n\t\t  \r\n\tif(req.body.action && req.body.action == 'update'){ \r\n\t\r\n\tvar updateAddress = `UPDATE address SET street = '${req.body.street}', city = '${req.body.city}', state = '${req.body.state}', zip = '${req.body.zip}' RETURNING addressID`\r\n\t\r\n\tpool.query(updateAddress , (err,result) => {\r\n\t\tif(err){\r\n\t\t\tres.send('Address Not Found')\r\n\t\t\treturn\r\n\t\t}else{\r\n\t\t\taddressID = result.rows[0].addressID \r\n\t\t\t\r\n\t\t\tvar updateProperty = `UPDATE property SET propertyType = '${req.body.propertytype}', price = '${req.body.price}', size='${req.body.size}', num_bedroom = '${req.body.num_bedroom}', num_bathroom = '${req.body.num_bathroom}' WHERE addressID = '${addressID}'`\r\n\t\r\n\t\t\tpool.query( updateProperty , (err,result) => {\r\n\t\t\tconsole.log(err, result)\r\n\r\n\t\t\tres.redirect('/insert')\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\t\r\n\t\r\n}\r\n\r\n\tif(req.body.action && req.body.action == 'delete'){ \r\n\t\tpool.query(`DELETE FROM property WHERE addressID = '${addressID}'`, (err,result) => { \r\n\t\tconsole.log(err, result) \r\n\t\t\r\n\t\tres.redirect('/insert')\r\n\t\t\r\n\t\t})\r\n\t}\r\n}) \r\n\r\nrouter.get('/register', (req,res) => { \r\n\tres.render('register')\r\n}) \r\n\r\nrouter.post('/register', (req,res) => {\r\n\tif(req.body.action && req.body.action == 'customer'){\r\n\t\trealtor = false;\r\n\t\tres.redirect('/customersignup') \r\n\t\t\r\n\t}\r\n\tif(req.body.action && req.body.action == 'realtor'){\r\n\t\trealtor = true;\r\n\t\tres.redirect('/realtorsignup')\r\n\t}\r\n})\r\n\r\n\r\nrouter.get('/customersignup',  (req,res) => {\r\n\tres.render('customersignup')\r\n\r\n})\r\n\r\nrouter.post('/customersignup' ,   async (req,res) => {\r\n\t\r\n\t\r\n\tif( !req.body.username || !req.body.password || !req.body.firstName || !req.body.lastName || !req.body.phoneno || !req.body.email){\r\n\t\t\r\n\t\tres.redirect('/customersignuperror')\r\n\t}else{\r\n\t \r\n\t  const hp = await bcrypt.hash(req.body.password, 10)   \r\n\t \r\n\t pool.query(`INSERT INTO customer(user_name,password,first_name,last_name,phone_number,email)\r\n\t\tVALUES ( '${req.body.username}', '${hp}', '${req.body.firstName}', '${req.body.lastName}', '${req.body.phoneno}', '${req.body.email}' ) `, (err, result) => {\r\n\t\t current_username = req.body.username; \r\n\t\t \r\n\t\t res.redirect('/customerlogin')\r\n\t\t \r\n\t\t } );  \r\n\t\t\r\n\t}\r\n\t\r\n})\r\n\r\nrouter.get('/customersignuperror' , (req,res) => {\r\n\tres.render('customersignuperror')\r\n\t\r\n})\r\n\r\nrouter.post('/customersignuperror', (req,res) => {\r\n\tif( req.body.action && req.body.action == 'try again' ){ \r\n\t\t  res.redirect('/customersignup')\r\n\t} \r\n})\r\n\t\r\n\r\nrouter.get('/realtorsignup', (req,res) => {\r\n\tres.render('realtorsignup')\r\n\t\r\n})\r\n\r\nrouter.post('/realtorsignup', async (req,res) => {\r\n\tif( !req.body.realtorID || !req.body.username || !req.body.password || !req.body.agency || !req.body.firstName ||\r\n\t !req.body.lastName || !req.body.phoneno || !req.body.email)  \r\n\t \r\n\t return res.redirect('/realtorsignuperror')\r\n\t\r\n\tconst hp = await bcrypt.hash(req.body.password, 10)\r\n\t\r\n\tpool.query(`INSERT INTO realtor(realtorID, user_name,password, agency, first_name,last_name,phone_number,email)\r\n\t\tVALUES ( '${req.body.realtorID}' ,'${req.body.username}', '${hp}', '${req.body.agency}','${req.body.firstName}', '${req.body.lastName}', '${req.body.phoneno}', '${req.body.email}' ) \r\n\t `, (err, result) => {\r\n\t\t current_realtorID = req.body.realtorID;\r\n\t\t current_username = req.body.username;\r\n\t\tres.redirect('/realtorlogin')\r\n\t\t\r\n\t\t} ); \r\n\t\r\n\t\r\n})\r\n\r\nrouter.get('/realtorsignuperror' , (req,res) => { \r\n\t res.render('realtorsignuperror')\r\n}) \r\n\r\nrouter.post('/realtorsignuperror' , (req,res) => {\r\n\tif( req.body.action && req.body.action == 'try again' ){ \r\n\t\t  res.redirect('/realtorsignup')\r\n\t} \r\n\t\r\n})\r\n\r\nrouter.get('/invalid', (req,res) => {\r\n\tres.render('invalidlogin')\r\n\t\r\n})\r\n\r\nrouter.post('/invalid', (req,res) => { \r\n\tif(realtor){\r\n\t\tres.redirect('/realtorlogin')\r\n\t}else{\r\n\t\tres.redirect('/customerlogin')\r\n\t}\r\n\t\r\n})\r\n \r\nrouter.get('/login' , (req,res) => {\r\n\tres.render('index')\r\n\t\r\n})\r\n\r\nrouter.post('/login' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'customer') {\r\n\t\tres.redirect('/customerlogin')\r\n\t}\t\r\n\tif(req.body.action && req.body.action == 'realtor') {\r\n\t\tres.redirect('/realtorlogin')\r\n\t}\t\r\n\t \r\n})\r\n\r\n\r\nrouter.get('/customerlogin', (req,res) => {\r\n\tres.render('customerlogin')\r\n\t\r\n})\r\n\r\n\r\n\r\nrouter.post('/customerlogin',    (req,res) => { \r\n \r\nrealtor = false\r\n//check user name and password with db\r\n\tif(req.body.action && req.body.action == 'login'){\r\n \t\tcurrent_username = req.body.username;\r\n\t\t\t pool.query(`SELECT * FROM CUSTOMER WHERE user_name = '${req.body.username}'`, (err,result) => {\r\n\t\t\t\tconsole.log(err,result) \r\n\t\t\t\t\r\n\t\t\t\tif(result.rows.length == 0) {\r\n\t\t\t\t\tres.redirect('/nocustomer') \r\n\t\t\t\t}\r\n\t\t\t\tif(result.rows.length > 0){\r\n\t\t\t\t\tvar password = result.rows[0].password\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(  bcrypt.compareSync(req.body.password, password) ){\r\n\t\t\t\t\t\tres.redirect('/customerpanel')\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres.redirect('/invalid') \r\n\t\t\t\t\t\tconsole.log(req)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t \r\n\t\t \r\n\t\r\n\tif(req.body.action && req.body.action == 'register'){\r\n\t\tres.redirect('/register');\r\n\t}\r\n\t\r\n })\r\n\r\nrouter.get('/nocustomer' , (req,res) => {\r\n\tres.render('nocustomer')\r\n})\r\n\r\nrouter.post('/nocustomer' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'try again')\r\n\t\tres.redirect('/customerlogin')\r\n\tif(req.body.action && req.body.action == 'register')\r\n\t\tres.redirect('/customersignup')\r\n\t\r\n\t\r\n})\r\n\r\nrouter.get('/norealtor' , (req,res) => {\r\n\tres.render('norealtor')\r\n})\r\n\r\nrouter.post('/norealtor' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'try again')\r\n\t\tres.redirect('/realtorlogin')\r\n\tif(req.body.action && req.body.action == 'register')\r\n\t\tres.redirect('/realtorsignup')\r\n\t\r\n\t\r\n})\r\n\r\nrouter.get('/realtorlogin', (req,res) => {\r\n\tres.render('realtorlogin')\r\n\t\r\n})\r\n\r\n\r\nrouter.post('/realtorlogin', (req,res) => { \r\n\r\nrealtor = true\r\n\r\n//check user name and password with db\r\n\tif(req.body.action && req.body.action == 'login'){\r\n\t\t   \r\n\t\t\tcurrent_username = req.body.username;\r\n\t\t\t pool.query(`SELECT * FROM realtor WHERE user_name = '${req.body.username}'`, (err,result) => {\r\n\t\t\t\tconsole.log(err,result)\r\n\t\t\t\t\r\n\t\t\t\tif(result.rows.length == 0)\r\n\t\t\t\t\tres.redirect('/norealtor') \r\n\t\t\t\t\r\n\t\t\t\tif(result.rows.length > 0){\r\n\t\t\t\t\tvar password = result.rows[0].password\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( bcrypt.compareSync(req.body.password, password) ){\r\n\t\t\t\t\t\tcurrent_realtorID = result.rows[0].realtorID\r\n\t\t\t\t\t\tres.redirect('/realtorpanel')\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t res.redirect('/invalid') \r\n\t\t\t\t\t\t console.log(req)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t\t\r\n\t}\r\n\t \r\n\t\t \r\n\t\r\n\tif(req.body.action && req.body.action == 'register'){\r\n\t\tres.redirect('/register');\r\n\t}\r\n\t\r\n })\r\n\r\n\r\n \r\nrouter.get('/realtorpanel', (req,res) => {\r\n\t\r\n\tpool.query(`SELECT * FROM realtor WHERE user_name = '${current_username}'`, (err,realtor_results) => {\r\n            console.log(err, realtor_results)\r\n         \r\n             res.render('realtorpanel', { \r\n                     name: current_username,\r\n                      realtor: realtor_results.rows[0] \r\n\t\t\t});\r\n\t});   \r\n\t \r\n })\r\n \r\n router.post('/realtorpanel', (req,res) => {\r\n\t \r\n\t\tif(req.body.action && req.body.action == 'crud'){\r\n\t\t\tres.redirect('/insert')\r\n\t\t}\r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change password'){\r\n\t\t\tres.redirect('/realtorchangepassword')\r\n\t\t\t\t\r\n\t\t}   \r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change password'){\r\n\t\t\tres.redirect('/realtorchangephoneno')\r\n\t\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change email'){\r\n\t\t\tres.redirect('/realtorchangeemail')\r\n\t\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\t\t\r\n\t\tif(req.body.action && req.body.action == 'change agency'){\r\n\t\t\tres.redirect('/realtorchangeagency')\r\n\t\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change phone number'){\r\n\t\t\tres.redirect('/realtorchangephoneno')\r\n\t\t}\t\t\r\n\t\t\t\t\r\n\t\tif(req.body.action && req.body.action == 'go to listings'){\r\n\t\t\tres.redirect('/listingsr')\r\n\t\t}  \r\n\t \r\n })\r\n \r\nrouter.get('/listingsr', (req,res) => {\r\n\t res.render('listingsr')\r\n })\r\n\r\nrouter.post('/listingsr', (req,res) => {\r\n\t\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/realtorchangeagency', (req,res) => {\r\n\tres.render('realtorchangeagency')\r\n\r\n})\r\n\r\nrouter.post('/realtorchangeagency' , (req,res) => {\r\n\tpool.query(`UPDATE realtor SET agency = '${req.body.agency}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t \r\n})\r\n\r\nrouter.get('/realtorchangepassword' , (req,res) => {\r\n\tres.render('realtorchangepassword')\r\n})\r\n\r\nrouter.post('/realtorchangepassword', (req,res) => {\r\n\tpool.query(`UPDATE realtor SET password = '${req.body.password}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/realtorchangeemail', (req,res) => {\r\n\tres.render('realtorchangeemail')\r\n\r\n})\r\n\r\nrouter.post('/realtorchangeemail' , (req,res) => {\r\n\tpool.query(`UPDATE realtor SET email = '${req.body.email}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t \r\n})\r\n\r\nrouter.get('/realtorchangephoneno' , (req,res) => {\r\n\tres.render('realtorchangephoneno')\r\n})\r\n\r\nrouter.post('/realtorchangephoneno', (req,res) => {\r\n\tpool.query(`UPDATE realtor SET phone_number = '${req.body.phoneno}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t\r\n})\r\n\r\n\r\n\r\nrouter.get('/customerpanel', (req,res) => { \r\n\t\r\n\tpool.query(`SELECT * FROM customer WHERE user_name = '${current_username}'`, (err,customer_results) => {\r\n            console.log(err, customer_results)\r\n         \r\n            res.render('customerpanel', { \r\n                     name: current_username,\r\n                      customer: customer_results.rows[0] \r\n\t\t\t});\r\n\t\t\t\r\n\t\r\n\t}); \r\n\t\t\t \r\n\t \r\n })\r\n \r\n router.post('/customerpanel', (req,res) => {\r\n\t  \r\n\tif(req.body.action && req.body.action == 'change password'){\r\n\t\tres.redirect('/customerchangepassword')\r\n\t\t\t\r\n\t}   \r\n\t\r\n\tif(req.body.action && req.body.action == 'change password'){\r\n\t\tres.redirect('/customerchangephoneno')\r\n\t\t\t\r\n\t} \r\n\t\r\n\t\r\n\t\r\n\tif(req.body.action && req.body.action == 'change email'){\r\n\t\tres.redirect('/customerchangeemail')\r\n\t\t\t\r\n\t} \r\n\t \r\n\t\r\n\tif(req.body.action && req.body.action == 'change phone number'){\r\n\t\tres.redirect('/customerchangephoneno')\r\n\t\t\t\r\n\t} \r\n\t\r\n\tif(req.body.action && req.body.action == 'go to listings') {\r\n\t\tres.redirect('/listingsc')\r\n\t}\r\n\t \r\n }) \r\n \r\n router.get('/listingsc', (req,res) => {\r\n\t res.render('listingsc')\r\n })\r\n\r\nrouter.post('/listingsc', (req,res) => {\r\n\t\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/customerchangepassword' , (req,res) => {\r\n\tres.render('customerchangepassword')\r\n})\r\n\r\nrouter.post('/customerchangepassword', (req,res) => {\r\n\tpool.query(`UPDATE customer SET password = '${req.body.password}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/customerpanel')\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/customerchangeemail', (req,res) => {\r\n\tres.render('customerchangeemail')\r\n\r\n})\r\n\r\nrouter.post('/customerchangeemail' , (req,res) => {\r\n\tpool.query(`UPDATE customer SET email = '${req.body.email}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/customerpanel')\r\n\t \r\n})\r\n\r\nrouter.get('/customerchangephoneno' , (req,res) => {\r\n\tres.render('customerchangephoneno')\r\n})\r\n\r\nrouter.post('/customerchangephoneno', (req,res) => {\r\n\tpool.query(`UPDATE customer SET phone_number = '${req.body.phoneno}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/customerpanel')\r\n\t\r\n})\r\n\r\napp.use('/',router);\r\napp.listen(port, () => {\r\n  console.log(`Example app listening on port ${port}`)\r\n})\r\n"],"file":"index.dev.js"}