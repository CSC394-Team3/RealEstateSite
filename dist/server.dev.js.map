{"version":3,"sources":["server.js"],"names":["express","require","app","bodyParser","port","process","env","PORT","router","Router","path","pg","bcrypt","body","validationResult","use","join","__dirname","set","current_username","current_realtorID","addressID","realtor","json","urlencoded","extended","Pool","connectionParams","DATABASE_URL","connectionString","ssl","rejectUnauthorized","host","user","password","database","console","log","pool","Client","connect","err","get","req","res","render","title","post","errors","isEmpty","status","send","array","redirect","query","property_results","properties","rows","action","addAddress","street","city","state","zip","result","addressid","insertProperty","propertytype","price","size","num_bedroom","num_bathroom","updateAddress","length","updateProperty","username","firstName","lastName","phoneno","email","hash","hp","realtorID","agency","compareSync","realtor_results","name","results","customer_results","customer","module","exports"],"mappings":"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","sourcesContent":["const express = require('express')\r\nconst app = express()\r\nconst bodyParser = require('body-parser');\r\nconst port = process.env.PORT || 3000\r\nconst router = express.Router();\r\nconst path = require('path') \r\nconst pg = require('pg')\r\nconst bcrypt = require('bcrypt') \r\nconst { body, validationResult } = require('express-validator'); \r\n\r\n//Set location for accessing files\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n//Set the view engine for the express app  \r\napp.set(\"view engine\", \"pug\")\r\nvar current_username = \"\";\r\nvar current_realtorID = 2;\r\nvar addressID \r\nvar realtor = true;\r\n\r\n//for parsing application/json\r\napp.use(bodyParser.json());\r\napp.use(express.json())\r\n\r\n//for parsing application/xwww-\r\napp.use(bodyParser.urlencoded({ extended:true }));\r\n//form-urlencoded\r\n\r\nconst Pool = require('pg').Pool\r\n\r\nvar connectionParams =  null;\r\nif (process.env.DATABASE_URL != null){\r\n    connectionParams = {\r\n        connectionString: process.env.DATABASE_URL,\r\n        ssl: { rejectUnauthorized: false }\r\n    } \r\n}\r\n\r\nelse{\r\n\tconnectionParams = {\r\n\t\thost: 'willowrealestate.postgres.database.azure.com',\r\n\t\tuser: 'team5',\r\n\t\tpassword: 'Willow5!',\r\n\t\tdatabase: 'postgres',\r\n\t\tport: 5432 ,\r\n\t\tssl: true\r\n   }\r\n }\r\n\r\n\r\nconsole.log(connectionParams)\r\nconst pool = new pg.Client(connectionParams)\r\n\r\npool.connect(err => {\r\n    if (err) throw err; \r\n});\r\n \r\nrouter.get('/', (req, res) => {\r\n  res.render('index', { title: 'Willow' });\r\n})\r\n\r\n\t\r\n \r\nrouter.post('/',\r\n\t\t(req,res) => {\r\n\t\t\r\n\t\tconst errors = validationResult(req);\r\n\t\tif(!errors.isEmpty()) {\r\n\t\t\treturn res.status(400).send({ errors: errors.array() });\r\n\t\t}\r\n\t\t\r\n\t\tres.redirect('/')\r\n\r\n})\r\n\r\nrouter.get('/insert', (req,res) => {  \r\n\t \r\n\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID` , (err,property_results) => {\r\n            console.log(err, property_results)\r\n          res.render('insert', {  \r\n\t\t      properties: property_results.rows\r\n\t\t\t}); \r\n\t\t\t\r\n\t\r\n\t});\r\n\t \r\n\t\r\n\t\r\n\t\r\n})  \r\n\r\nrouter.post('/insert',   (req, res) => {  \r\n\tif(req.body.action && req.body.action == 'add'){\r\n\t\tvar addAddress = `INSERT INTO address (street, city, state, zip) VALUES ( '${req.body.street}', '${req.body.city}', '${req.body.state}', '${req.body.zip}' ) ON conflict do nothing RETURNING  addressID` \r\n\t\r\n\t\tpool.query(addAddress, (err,result) => {\r\n\t\t\tif( !result ) { return }\r\n\t\t\t    addressID = result.rows[0].addressid \r\n\t\t\t\tconsole.log(err,result)\r\n\t\t\t\tvar insertProperty = `INSERT INTO property (propertyType, price, size, num_bedroom, num_bathroom,realtorID, addressID) VALUES ('${req.body.propertytype}', '${req.body.price}','${req.body.size}','${req.body.num_bedroom}','${req.body.num_bathroom}','${current_realtorID}', '${addressID}')`\r\n\t\t\t\r\n\t\t\t\t\tpool.query(insertProperty, (err, result) => {\r\n\t\t\t\t\t\tconsole.log(err, result) \r\n\t\t\t\t\t\tres.redirect('/insert') \r\n\t\t\t\t\t})  \r\n\t\t\t}) \r\n\t\t\r\n\t\t\t\r\n\t\tvar insertProperty = `INSERT INTO property (propertyType, price, size, num_bedroom, num_bathroom,realtorID, addressID) VALUES ('${req.body.propertytype}', '${req.body.price}','${req.body.size}','${req.body.num_bedroom}','${req.body.num_bathroom}','${current_realtorID}', '${addressID}')`\r\n\t\t\t\r\n\t\t\t\r\n\t\tpool.query(insertProperty, (err, result) => {\r\n\t\t\tconsole.log(err, result) \r\n\t\t\tres.redirect('/insert') \r\n\t\t})   \r\n\t}\r\n\t\t  \r\n\tif(req.body.action && req.body.action == 'update'){ \r\n\t\r\n\tvar updateAddress = `UPDATE address SET street = '${req.body.street}', city = '${req.body.city}', state = '${req.body.state}', zip = '${req.body.zip}' RETURNING addressID`\r\n\t\r\n\tpool.query(updateAddress , (err,result) => {\r\n\t\tif(result.rows.length == 0){\r\n\t\t\treturn\r\n\t\t}else{\r\n\t\t\taddressID = result.rows[0].addressid \r\n\t\t\t\r\n\t\t\tvar updateProperty = `UPDATE property SET propertyType = '${req.body.propertytype}', price = '${req.body.price}', size='${req.body.size}', num_bedroom = '${req.body.num_bedroom}', num_bathroom = '${req.body.num_bathroom}' WHERE addressID = '${addressID}'`\r\n\t\r\n\t\t\tpool.query( updateProperty , (err,result) => {\r\n\t\t\tconsole.log(err, result)\r\n\r\n\t\t\tres.redirect('/insert')\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\t\r\n\t\r\n}\r\n\r\n\tif(req.body.action && req.body.action == 'delete'){ \r\n\t\tpool.query(`DELETE FROM property WHERE addressID = '${addressID}'`, (err,result) => { \r\n\t\tconsole.log(err, result) \r\n\t\t\r\n\t\tres.redirect('/insert')\r\n\t\t\r\n\t\t})\r\n\t}\r\n}) \r\n\r\nrouter.get('/register', (req,res) => { \r\n\tres.render('register')\r\n}) \r\n\r\nrouter.post('/register', (req,res) => {\r\n\tif(req.body.action && req.body.action == 'customer'){\r\n\t\trealtor = false;\r\n\t\tres.redirect('/customersignup') \r\n\t\t\r\n\t}\r\n\tif(req.body.action && req.body.action == 'realtor'){\r\n\t\trealtor = true;\r\n\t\tres.redirect('/realtorsignup')\r\n\t}\r\n})\r\n\r\n\r\nrouter.get('/customersignup',  (req,res) => {\r\n\tres.render('customersignup')\r\n\r\n})\r\n\r\nrouter.post('/customersignup' ,   async (req,res) => {\r\n\t\r\n\t\r\n\tif( !req.body.username || !req.body.password || !req.body.firstName || !req.body.lastName || !req.body.phoneno || !req.body.email){\r\n\t\t\r\n\t\tres.redirect('/customersignuperror')\r\n\t}else{\r\n\t \r\n\t  const hp = await bcrypt.hash(req.body.password, 10)   \r\n\t \r\n\t pool.query(`INSERT INTO customer(user_name,password,first_name,last_name,phone_number,email)\r\n\t\tVALUES ( '${req.body.username}', '${hp}', '${req.body.firstName}', '${req.body.lastName}', '${req.body.phoneno}', '${req.body.email}' ) `, (err, result) => {\r\n\t\t current_username = req.body.username; \r\n\t\t \r\n\t\t res.redirect('/customerlogin')\r\n\t\t \r\n\t\t } );  \r\n\t\t\r\n\t}\r\n\t\r\n})\r\n\r\nrouter.get('/customersignuperror' , (req,res) => {\r\n\tres.render('customersignuperror')\r\n\t\r\n})\r\n\r\nrouter.post('/customersignuperror', (req,res) => {\r\n\tif( req.body.action && req.body.action == 'try again' ){ \r\n\t\t  res.redirect('/customersignup')\r\n\t} \r\n})\r\n\t\r\n\r\nrouter.get('/realtorsignup', (req,res) => {\r\n\tres.render('realtorsignup')\r\n\t\r\n})\r\n\r\nrouter.post('/realtorsignup', async (req,res) => {\r\n\tif( !req.body.realtorID || !req.body.username || !req.body.password || !req.body.agency || !req.body.firstName ||\r\n\t !req.body.lastName || !req.body.phoneno || !req.body.email)  \r\n\t \r\n\t return res.redirect('/realtorsignuperror')\r\n\t\r\n\tconst hp = await bcrypt.hash(req.body.password, 10)\r\n\t\r\n\tpool.query(`INSERT INTO realtor(realtorID, user_name,password, agency, first_name,last_name,phone_number,email)\r\n\t\tVALUES ( '${req.body.realtorID}' ,'${req.body.username}', '${hp}', '${req.body.agency}','${req.body.firstName}', '${req.body.lastName}', '${req.body.phoneno}', '${req.body.email}' ) \r\n\t `, (err, result) => {\r\n\t\t current_realtorID = req.body.realtorID;\r\n\t\t current_username = req.body.username;\r\n\t\tres.redirect('/realtorlogin')\r\n\t\t\r\n\t\t} ); \r\n\t\r\n\t\r\n})\r\n\r\nrouter.get('/realtorsignuperror' , (req,res) => { \r\n\t res.render('realtorsignuperror')\r\n}) \r\n\r\nrouter.post('/realtorsignuperror' , (req,res) => {\r\n\tif( req.body.action && req.body.action == 'try again' ){ \r\n\t\t  res.redirect('/realtorsignup')\r\n\t} \r\n\t\r\n})\r\n\r\nrouter.get('/invalid', (req,res) => {\r\n\tres.render('invalidlogin')\r\n\t\r\n})\r\n\r\nrouter.post('/invalid', (req,res) => { \r\n\tif(realtor){\r\n\t\tres.redirect('/realtorlogin')\r\n\t}else{\r\n\t\tres.redirect('/customerlogin')\r\n\t}\r\n\t\r\n})\r\n \r\nrouter.get('/login' , (req,res) => {\r\n\tres.render('index')\r\n\t\r\n})\r\n\r\nrouter.post('/login' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'customer') {\r\n\t\tres.redirect('/customerlogin')\r\n\t}\t\r\n\tif(req.body.action && req.body.action == 'realtor') {\r\n\t\tres.redirect('/realtorlogin')\r\n\t}\t\r\n\t \r\n})\r\n\r\n\r\nrouter.get('/customerlogin', (req,res) => {\r\n\tres.render('customerlogin')\r\n\t\r\n})\r\n\r\n\r\n\r\nrouter.post('/customerlogin',    (req,res) => { \r\n \r\nrealtor = false\r\n//check user name and password with db\r\n\tif(req.body.action && req.body.action == 'login'){\r\n \t\tcurrent_username = req.body.username;\r\n\t\t\t pool.query(`SELECT * FROM CUSTOMER WHERE user_name = '${req.body.username}'`, (err,result) => {\r\n\t\t\t\tconsole.log(err,result) \r\n\t\t\t\t\r\n\t\t\t\tif(result.rows.length == 0) {\r\n\t\t\t\t\tres.redirect('/nocustomer') \r\n\t\t\t\t}\r\n\t\t\t\tif(result.rows.length > 0){\r\n\t\t\t\t\tvar password = result.rows[0].password\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(  bcrypt.compareSync(req.body.password, password) ){\r\n\t\t\t\t\t\tres.redirect('/customerpanel')\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres.redirect('/invalid') \r\n\t\t\t\t\t\tconsole.log(req)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t \r\n\t\t \r\n\t\r\n\tif(req.body.action && req.body.action == 'register'){\r\n\t\tres.redirect('/register');\r\n\t}\r\n\t\r\n })\r\n\r\nrouter.get('/nocustomer' , (req,res) => {\r\n\tres.render('nocustomer')\r\n})\r\n\r\nrouter.post('/nocustomer' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'try again')\r\n\t\tres.redirect('/customerlogin')\r\n\tif(req.body.action && req.body.action == 'register')\r\n\t\tres.redirect('/customersignup')\r\n\t\r\n\t\r\n})\r\n\r\nrouter.get('/norealtor' , (req,res) => {\r\n\tres.render('norealtor')\r\n})\r\n\r\nrouter.post('/norealtor' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'try again')\r\n\t\tres.redirect('/realtorlogin')\r\n\tif(req.body.action && req.body.action == 'register')\r\n\t\tres.redirect('/realtorsignup')\r\n\t\r\n\t\r\n})\r\n\r\nrouter.get('/realtorlogin', (req,res) => {\r\n\tres.render('realtorlogin')\r\n\t\r\n})\r\n\r\n\r\nrouter.post('/realtorlogin', (req,res) => { \r\n\r\nrealtor = true\r\n\r\n//check user name and password with db\r\n\tif(req.body.action && req.body.action == 'login'){\r\n\t\t   \r\n\t\t\tcurrent_username = req.body.username;\r\n\t\t\t pool.query(`SELECT * FROM realtor WHERE user_name = '${req.body.username}'`, (err,result) => {\r\n\t\t\t\tconsole.log(err,result)\r\n\t\t\t\t\r\n\t\t\t\tif(result.rows.length == 0)\r\n\t\t\t\t\tres.redirect('/norealtor') \r\n\t\t\t\t\r\n\t\t\t\tif(result.rows.length > 0){\r\n\t\t\t\t\tvar password = result.rows[0].password\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( bcrypt.compareSync(req.body.password, password) ){\r\n\t\t\t\t\t\tcurrent_realtorID = result.rows[0].realtorID\r\n\t\t\t\t\t\tres.redirect('/realtorpanel')\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t res.redirect('/invalid') \r\n\t\t\t\t\t\t console.log(req)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t\t\r\n\t}\r\n\t \r\n\t\t \r\n\t\r\n\tif(req.body.action && req.body.action == 'register'){\r\n\t\tres.redirect('/register');\r\n\t}\r\n\t\r\n })\r\n\r\n\r\n \r\nrouter.get('/realtorpanel', (req,res) => {\r\n\t\r\n\tpool.query(`SELECT * FROM realtor WHERE user_name = '${current_username}'`, (err,realtor_results) => {\r\n            console.log(err, realtor_results)\r\n         \r\n             res.render('realtorpanel', { \r\n                     name: current_username,\r\n                      realtor: realtor_results.rows[0] \r\n\t\t\t});\r\n\t});   \r\n\t \r\n })\r\n \r\n router.post('/realtorpanel', (req,res) => {\r\n\t \r\n\t\tif(req.body.action && req.body.action == 'crud'){\r\n\t\t\tres.redirect('/insert')\r\n\t\t}\r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change password'){\r\n\t\t\tres.redirect('/realtorchangepassword')\r\n\t\t\t\t\r\n\t\t}   \r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change password'){\r\n\t\t\tres.redirect('/realtorchangephoneno')\r\n\t\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change email'){\r\n\t\t\tres.redirect('/realtorchangeemail')\r\n\t\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\t\t\r\n\t\tif(req.body.action && req.body.action == 'change agency'){\r\n\t\t\tres.redirect('/realtorchangeagency')\r\n\t\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\tif(req.body.action && req.body.action == 'change phone number'){\r\n\t\t\tres.redirect('/realtorchangephoneno')\r\n\t\t}\t\t\r\n\t\t\t\t\r\n\t\tif(req.body.action && req.body.action == 'go to listings'){\r\n\t\t\tres.redirect('/listingsr')\r\n\t\t}  \r\n\t \r\n })\r\n \r\nrouter.get('/listingsr', (req,res) => {\r\n\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID WHERE realtorID = '${current_realtorID}' ` , (err,property_results) => {\r\n            console.log(err, property_results)\r\n          res.render('listingsr', {  \r\n\t\t      properties: property_results.rows\r\n\t\t\t}); \r\n\t\t\t\r\n\t\r\n\t});\r\n })\r\n\r\nrouter.post('/listingsr', (req,res) => {\r\n\tif(req.body.action && req.body.action == 'Order by Housing Type') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY propertytype` , (err,results) =>  {\r\n\t\t\tres.render('listingsr', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t})\r\n\t}else if(req.body.action && req.body.action == 'Order by Price') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY price`, (err,results) =>  {\r\n\t\t\tres.render('listingsr', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}else if(req.body.action && req.body.action == 'Order by Number of Bedrooms') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY num_bedroom`, (err,results) =>  {\r\n\t\t\tres.render('listingsr', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}else if(req.body.action && req.body.action == 'Order by Number of Bathrooms') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY num_bathroom`, (err,results) =>  {\r\n\t\t\tres.render('listingsr', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}else if(req.body.action && req.body.action == 'Order by Zip Code') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY zip`, (err,results) =>  {\r\n\t\t\tres.render('listingsr', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/realtorchangeagency', (req,res) => {\r\n\tres.render('realtorchangeagency')\r\n\r\n})\r\n\r\nrouter.post('/realtorchangeagency' , (req,res) => {\r\n\tpool.query(`UPDATE realtor SET agency = '${req.body.agency}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t \r\n})\r\n\r\nrouter.get('/realtorchangepassword' , (req,res) => {\r\n\tres.render('realtorchangepassword')\r\n})\r\n\r\nrouter.post('/realtorchangepassword', (req,res) => {\r\n\tpool.query(`UPDATE realtor SET password = '${req.body.password}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/realtorchangeemail', (req,res) => {\r\n\tres.render('realtorchangeemail')\r\n\r\n})\r\n\r\nrouter.post('/realtorchangeemail' , (req,res) => {\r\n\tpool.query(`UPDATE realtor SET email = '${req.body.email}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t \r\n})\r\n\r\nrouter.get('/realtorchangephoneno' , (req,res) => {\r\n\tres.render('realtorchangephoneno')\r\n})\r\n\r\nrouter.post('/realtorchangephoneno', (req,res) => {\r\n\tpool.query(`UPDATE realtor SET phone_number = '${req.body.phoneno}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/realtorpanel')\r\n\t\r\n})\r\n\r\n\r\n\r\nrouter.get('/customerpanel', (req,res) => { \r\n\t\r\n\tpool.query(`SELECT * FROM customer WHERE user_name = '${current_username}'`, (err,customer_results) => {\r\n            console.log(err, customer_results)\r\n         \r\n            res.render('customerpanel', { \r\n                     name: current_username,\r\n                      customer: customer_results.rows[0] \r\n\t\t\t});\r\n\t\t\t\r\n\t\r\n\t}); \r\n\t\t\t \r\n\t \r\n })\r\n \r\n router.post('/customerpanel', (req,res) => {\r\n\t  \r\n\tif(req.body.action && req.body.action == 'change password'){\r\n\t\tres.redirect('/customerchangepassword')\r\n\t\t\t\r\n\t}   \r\n\t\r\n\tif(req.body.action && req.body.action == 'change password'){\r\n\t\tres.redirect('/customerchangephoneno')\r\n\t\t\t\r\n\t} \r\n\t\r\n\t\r\n\t\r\n\tif(req.body.action && req.body.action == 'change email'){\r\n\t\tres.redirect('/customerchangeemail')\r\n\t\t\t\r\n\t} \r\n\t \r\n\t\r\n\tif(req.body.action && req.body.action == 'change phone number'){\r\n\t\tres.redirect('/customerchangephoneno')\r\n\t\t\t\r\n\t} \r\n\t\r\n\tif(req.body.action && req.body.action == 'go to listings') {\r\n\t\tres.redirect('/listingsc')\r\n\t}\r\n\t \r\n }) \r\n \r\n router.get('/listingsc', (req,res) => {\r\n\t \r\n\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID` , (err,property_results) => {\r\n            console.log(err, property_results)\r\n          res.render('listingsc', {  \r\n\t\t      properties: property_results.rows\r\n\t\t\t}); \r\n\t\t\t\r\n\t\r\n\t});\r\n })\r\n\r\nrouter.post('/listingsc', (req,res) => {\r\n\tif(req.body.action && req.body.action == 'Order by Housing Type') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY propertytype` , (err,results) =>  {\r\n\t\t\tres.render('listingsc', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t})\r\n\t}else if(req.body.action && req.body.action == 'Order by Price') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY price`, (err,results) =>  {\r\n\t\t\tres.render('listingsc', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}else if(req.body.action && req.body.action == 'Order by Number of Bedrooms') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY num_bedroom`, (err,results) =>  {\r\n\t\t\tres.render('listingsc', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}else if(req.body.action && req.body.action == 'Order by Number of Bathrooms') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY num_bathroom`, (err,results) =>  {\r\n\t\t\tres.render('listingsc', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}else if(req.body.action && req.body.action == 'Order by Zip Code') {\r\n\t\tpool.query(`SELECT * FROM property INNER JOIN address on address.addressID = property.addressID ORDER BY zip`, (err,results) =>  {\r\n\t\t\tres.render('listingsc', {  \r\n\t\t      properties: results.rows\r\n\t\t\t}); \r\n\t\t}) \r\n\t}else if(req.body.action && req.body.action == 'Contact Us') {\r\n\t\tres.redirect('/contactus') \r\n\t}\r\n\t\r\n})\r\n\r\nrouter.get('/contactus' , (req,res) => {\r\n\tres.render('contactus')\r\n})\r\n\r\nrouter.post('/contactus' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'done' ){\r\n\t\tres.redirect('messagesent')\r\n\t}\r\n\t\r\n})\r\n\r\nrouter.get('/messagesent' , (req,res) => {\r\n\tres.render('messagesent')\r\n\t\r\n})\r\n\r\nrouter.post('/messagesent' , (req,res) => {\r\n\tif(req.body.action && req.body.action == 'Go back to listings' ) {\r\n\t\tres.redirect('/listingsc')\r\n\t}\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/customerchangepassword' , (req,res) => {\r\n\tres.render('customerchangepassword')\r\n})\r\n\r\nrouter.post('/customerchangepassword', (req,res) => {\r\n\tpool.query(`UPDATE customer SET password = '${req.body.password}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/customerpanel')\r\n\t\r\n})\r\n\r\n\r\nrouter.get('/customerchangeemail', (req,res) => {\r\n\tres.render('customerchangeemail')\r\n\r\n})\r\n\r\nrouter.post('/customerchangeemail' , (req,res) => {\r\n\tpool.query(`UPDATE customer SET email = '${req.body.email}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/customerpanel')\r\n\t \r\n})\r\n\r\nrouter.get('/customerchangephoneno' , (req,res) => {\r\n\tres.render('customerchangephoneno')\r\n})\r\n\r\nrouter.post('/customerchangephoneno', (req,res) => {\r\n\tpool.query(`UPDATE customer SET phone_number = '${req.body.phoneno}' WHERE user_name = '${current_username}' `  )\r\n\tres.redirect('/customerpanel')\r\n\t\r\n})\r\n\r\napp.use('/',router);\r\nmodule.exports = app\r\n"],"file":"server.dev.js"}